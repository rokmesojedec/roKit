@use "sass:map";
@use "sass:color";

// Generated from https://coolors.co/70d6ff-ff70a6-ff9770-ffd670-e9ff70
$baby-blue: #70d6ffff;
$french-pink: #ff70a6ff;
$light-salmon: #ff9770ff;
$orange-yellow-crayola: #ffd670ff;
$mindaro: #e9ff70ff;
//------------------------------------------------------------------------
$green: rgb(98, 189, 75);
$black: black;
$gray: #8f8f8f;
$dark-transparent: #000000e3;
$white: white;
$dark-blue: #1b2386;

// Gray Scale
//-----------------------------------------------------------------------//
// Generated with  https://gka.github.io/palettes/#/12|s|141414,c2c2c2,ffffff|ffffe0,ff005e,93003a|1|0 

$dark:     #141414;
$gray-10:  #252525;
$gray-9:   #373737;
$gray-8:   #4b4b4b;
$gray-7:   #5f5f5f;
$gray-6:   #747474;
$gray-5:   #8a8a8a;
$gray-4:   #a0a0a0;
$gray-3:   #b7b7b7;
$gray-2:   #cfcfcf;
$gray-1:   #e7e7e7;
$light:    #ffffff;

$grayscale: (
    "dark" :  #141414,
    "gray-10":#252525,
    "gray-9": #373737,
    "gray-8": #4b4b4b,
    "gray-7": #5f5f5f,
    "gray-6": #747474,
    "gray-5": #8a8a8a,
    "gray-4": #a0a0a0,
    "gray-3": #b7b7b7,
    "gray-2": #cfcfcf,
    "gray-1": #e7e7e7,
    "light":  #ffffff
);

// Theme Variables
//-----------------------------------------------------------------------//

// Modifiy to create custom theme
$muted: map.get($grayscale, "gray-6");
$text-color: map.get($grayscale, "dark");
$primary: $baby-blue;
$primary-dark: $dark-blue;
$secondary: $light-salmon;
$success: $green;
$warning: $mindaro;
$danger: $french-pink;
$code-color: $dark-blue;
$overlay-color: color.adjust(map.get($grayscale, "dark"), $alpha: -0.4);;
$text-light: map.get($grayscale, "white");

@mixin root-colors(){
    --text-color: #{$text-color};
    --text-light-color: #{$text-light};
    --text-muted-color: #{$muted};
    --code-color: #{$code-color};
    --primary-color: #{$primary};
    --primary-dark-color: #{$primary-dark};
    --secondary-color: #{$secondary};
    --success-color: #{$success};
    --warning-color: #{$warning};
    --danger-color: #{$danger};
    --overlay-color: #{$overlay-color};
    @each $color, $value in $grayscale {
        --#{$color}-color: #{$value};
    }
}

// list of color classes - gradient combinations are generated from 1 on 1 combinations of colors defined below 
// below classes should correspond to CSS variables defined in root-colors mixins
$bgcolors-textcolor-map: 
(
    "primary": "--text-light-color", 
    "primary-dark": "--text-light-color",
    "secondary": "--text-light-color", 
    "success": "--text-light-color", 
    "warning": "--text-color", 
    "danger": "--text-light-color", 
    "code": "--text-light-color"
);

$overlay-degrees: ("bottom": 0, "right": 90deg, "top": 180deg, "left": 270deg);

// generates text and background classes 
@mixin color-classes($bgcolors-textcolor-map: $bgcolors-textcolor-map){
    @each $bg, $color in $bgcolors-textcolor-map{
        .text-#{$bg}{
            color: var(--#{$bg}-color);
        }
        .border-#{$bg}{
            border-color: var(--#{$bg}-color);
        }
        .#{$bg}{
            background-color: var(--#{$bg}-color);
            color: var(#{$color});
        }
    }

    @each $position, $degrees in $overlay-degrees {
        .overlay-gradient-#{$position} {
            background: linear-gradient($degrees, var(--overlay-color), #ffffff00);
        }
    }

    .text-dark {
        color: var(--dark-color);
    }
    .text-light {
        color: var(--light-color);
    }
    .text-muted {
        color: var(--text-gray-6-color);
    }
    .border-light{
        border-color: var(--light-color);
    }
    .no-background{
        background: none;
    }
    .white{
        background-color: var(--light-color);
    }
}