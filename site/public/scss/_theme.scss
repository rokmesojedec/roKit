$baby-blue: #70d6ffff;
$french-pink: #ff70a6ff;
$light-salmon: #ff9770ff;
$orange-yellow-crayola: #ffd670ff;
$mindaro: #e9ff70ff;
$green: rgb(98, 189, 75);
$black: black;
$gray: #8f8f8f;
$dark-blue: #001b33;
$dark-transparent: 0000001f;

// Theme Variables
//-----------------------------------------------------------------------//

// Modifiy to create custom theme
$muted: $gray;
$text-color: $black;
$primary: $baby-blue;
$secondary: $light-salmon;
$success: $green;
$warning: $mindaro;
$danger: $french-pink;
$code-color: $dark-blue;
$overlay-color: $dark-transparent;

@mixin root-colors(){
    --text-color: #{$text-color};
    --text-muted-color: #{$muted};
    --code-color: #{$code-color};
    --primary-color: #{$primary};
    --secondary-color: #{$secondary};
    --success-color: #{$success};
    --warning-color: #{$warning};
    --danger-color: #{$danger};
    --overlay-color: #{$overlay-color};
}

// list of color classes - gradient combinations are generated from 1 on 1 combinations of colors defined below 
// below classes should correspond to CSS variables defined in root-colors mixins
$colors: "primary", "secondary", "success", "warning", "danger", "code";
$overlay-degrees: ("top": 0, "right": 90deg, "bottom": 180deg, "left": 270deg);

// generates text and background classes 
@mixin color-classes($colors: $colors){
    @each $color in $colors{
        .text-#{$color}{
            color: var(--#{$color}-color);
        }
        .#{$color}{
            background-color: var(--#{$color}-color);
        }
    }

    @each $position, $degrees in $overlay-degrees {
        .overlay-gradient-#{$position} {
            background: linear-gradient($degrees, var(--overlay-color), #ffffff00);
        }
    }

    .text-color {
        color: var(--text-color);
    }
    .text-white {
        color: white;
    }
    .text-muted {
        color: var(--text-muted-color);
    }
    .no-background{
        background: none;
    }
    .white{
        background-color: white;
    }
}